// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Client.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Client struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	BirthDate            int64    `protobuf:"varint,2,opt,name=birthDate,proto3" json:"birthDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{0}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Client) GetBirthDate() int64 {
	if m != nil {
		return m.BirthDate
	}
	return 0
}

type Result struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3cf1cf2c8ad561, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*Client)(nil), "api.Client")
	proto.RegisterType((*Result)(nil), "api.Result")
}

func init() { proto.RegisterFile("Client.proto", fileDescriptor_6e3cf1cf2c8ad561) }

var fileDescriptor_6e3cf1cf2c8ad561 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x71, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x72, 0xe2,
	0x62, 0x83, 0x08, 0x0a, 0x49, 0x71, 0x71, 0x94, 0x16, 0xa7, 0x16, 0xe5, 0x25, 0xe6, 0xa6, 0x4a,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xf9, 0x42, 0x32, 0x5c, 0x9c, 0x49, 0x99, 0x45, 0x25,
	0x19, 0x2e, 0x89, 0x25, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x08, 0x01, 0x25, 0x05,
	0x2e, 0xb6, 0xa0, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0x21, 0x31, 0x2e, 0xb6, 0x22, 0x30, 0x0b, 0x6c,
	0x02, 0x47, 0x10, 0x94, 0x67, 0xa4, 0xcf, 0xc5, 0x09, 0xb1, 0xc5, 0xb1, 0x20, 0x53, 0x48, 0x89,
	0x8b, 0x25, 0x38, 0xb1, 0x2c, 0x55, 0x88, 0x5b, 0x2f, 0xb1, 0x20, 0x53, 0x0f, 0x22, 0x2e, 0x05,
	0xe1, 0x40, 0x8c, 0x51, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xd1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x8b, 0xae, 0x92, 0x97, 0xb2, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClientApiClient is the client API for ClientApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientApiClient interface {
	Save(ctx context.Context, in *Client, opts ...grpc.CallOption) (*Result, error)
}

type clientApiClient struct {
	cc *grpc.ClientConn
}

func NewClientApiClient(cc *grpc.ClientConn) ClientApiClient {
	return &clientApiClient{cc}
}

func (c *clientApiClient) Save(ctx context.Context, in *Client, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/api.ClientApi/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientApiServer is the server API for ClientApi service.
type ClientApiServer interface {
	Save(context.Context, *Client) (*Result, error)
}

// UnimplementedClientApiServer can be embedded to have forward compatible implementations.
type UnimplementedClientApiServer struct {
}

func (*UnimplementedClientApiServer) Save(ctx context.Context, req *Client) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Save not implemented")
}

func RegisterClientApiServer(s *grpc.Server, srv ClientApiServer) {
	s.RegisterService(&_ClientApi_serviceDesc, srv)
}

func _ClientApi_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Client)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientApiServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ClientApi/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientApiServer).Save(ctx, req.(*Client))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ClientApi",
	HandlerType: (*ClientApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _ClientApi_Save_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Client.proto",
}
